variables:
  - template: /eng/common-variables.yml
  - name: Build.Repository.Clean
    value: true
  - name: officialBuildIdArg
    value: ''
  - ${{ if and(eq(variables['System.TeamProject'], 'internal'), ne(variables['Build.Reason'], 'PullRequest')) }}:
    - name: officialBuildIdArg
      value: '/p:OfficialBuildId=$(Build.BuildNumber)'

trigger:
  batch: true
  branches:
    include:
    - main
    - release/*

pr:
  branches:
    include:
    - main
    - release/*

stages:
- stage: build
  displayName: Build
  jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enablePublishBuildArtifacts: true
      enablePublishBuildAssets: true
      enablePublishUsingPipelines: true
      variables:
        - _BuildConfig: Release
      jobs:

      ############ macOS BUILD ############
      - job: Build_macOS
        displayName: macOS
        timeoutInMinutes: 30
        pool:
          vmImage: macOS-10.15
        steps:
        - bash: |
            ./build.sh -ci -configuration $(_BuildConfig) $(_InternalPublishArg) /p:PackageRID=osx-x64 /p:AssetManifestOS=osx /p:PlatformName=x64 $(_InternalBuildArgs) $(officialBuildIdArg)
          displayName: Build and Publish
        - publish: artifacts/packages
          artifact: Packages_macOS
        - bash: |
            rm -rf upstream node python
          displayName: Remove temporary artifacts

      ############ Linux BUILD ############
      - job: Build_Linux
        displayName: Linux
        timeoutInMinutes: 30
        pool:
          vmImage: ubuntu-20.04
        steps:
        - bash: |
            ./build.sh -ci -configuration $(_BuildConfig) $(_InternalPublishArg) /p:PackageRID=linux-x64 /p:AssetManifestOS=linux /p:PlatformName=x64 $(_InternalBuildArgs) $(officialBuildIdArg)
          displayName: Build and Publish
        - publish: artifacts/packages
          artifact: Packages_Linux
        - bash: |
            rm -rf upstream node python
          displayName: Remove temporary artifacts

      ############ Windows BUILD ############
      - job: Build_Windows
        displayName: Windows
        timeoutInMinutes: 30
        pool:
          vmImage: windows-2019
        steps:
        - script: |
            .\build.cmd -ci -configuration $(_BuildConfig) $(_InternalPublishArg) /p:PackageRID=win-x64 /p:AssetManifestOS=win /p:PlatformName=x64 /p:workloadPackagesPath=$(Build.SourcesDirectory)\artifacts\packages\$(_BuildConfig)\Shipping $(_InternalBuildArgs) $(officialBuildIdArg)
          displayName: Build and Publish
        - publish: artifacts/packages
          artifact: Packages_Windows
        - script: |
            rmdir /s /q upstream node python
          displayName: Remove temporary artifacts
        # Upload packages wrapping msis
        - task: CopyFiles@2
          displayName: Prepare job-specific intermediate artifacts subdirectory
          inputs:
            SourceFolder: '$(Build.SourcesDirectory)/artifacts/packages/$(_BuildConfig)'
            Contents: |
              Shipping/**/*
              NonShipping/**/*
            TargetFolder: '$(Build.StagingDirectory)/IntermediateArtifacts/workloads'
            CleanTargetFolder: true
        - task: PublishBuildArtifacts@1
          displayName: Publish intermediate artifacts
          inputs:
            pathToPublish: '$(Build.StagingDirectory)/IntermediateArtifacts'
            artifactName: IntermediateArtifacts
            artifactType: container
        # Delete wixpdb files before they are uploaded to artifacts
        - task: DeleteFiles@1
          displayName: Delete wixpdb's
          inputs:
            SourceFolder: $(Build.SourcesDirectory)/artifacts/workloadPackages
            Contents: '*.wixpdb'
        # Upload artifacts to be used for generating VS components
        - task: PublishPipelineArtifact@1
          displayName: Publish workload artifacts
          inputs:
            targetPath: $(Build.SourcesDirectory)/artifacts/workloadPackages
            artifactName: 'Workloads'
          continueOnError: true
          condition: always()

############ POST BUILD ARCADE LOGIC ############
- ${{ if and(ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest')) }}:
  - template: /eng/common/templates/post-build/post-build.yml
    parameters:
      publishingInfraVersion: 3
      enableSourceLinkValidation: false
      enableSigningValidation: false
      enableSymbolValidation: false
      enableNugetValidation: true
